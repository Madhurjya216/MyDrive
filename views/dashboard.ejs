<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>My Drive</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Cormorant:ital,wght@0,300..700;1,300..700&family=Crimson+Pro:ital,wght@0,200..900;1,200..900&family=Crimson+Text:ital,wght@0,400;0,600;0,700;1,400;1,600;1,700&family=Libre+Baskerville:ital,wght@0,400;0,700;1,400&family=Macondo&family=Marcellus&display=swap"
      rel="stylesheet"
    />
    <style>
      :root {
        --primary-color: #4a90e2;
        --background-dark: #121212;
        --card-background: #1e1e1e;
        --text-primary: #e0e0e0;
        --text-secondary: #a0a0a0;
        --hover-color: #5ca6f0;
      }

      body {
        font-family: "Inter", "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        margin: 0;
        padding: 0;
        background-color: var(--background-dark);
        color: var(--text-primary);
        line-height: 1.6;
      }

      .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
      }

      .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 1px solid #333;
      }

      .header h1 {
        margin: 0;
        color: var(--primary-color);
        font-weight: 700;
      }

      .nav {
        display: flex;
        gap: 20px;
      }

      .nav a {
        text-decoration: none;
        color: var(--text-secondary);
        font-weight: 500;
        transition: color 0.3s ease;
      }

      .nav a:hover {
        color: var(--primary-color);
      }

      .upload-btn {
        background-color: var(--primary-color);
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 600;
        text-decoration: none;
        transition: background-color 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 10px;
      }

      .upload-btn:hover {
        background-color: var(--hover-color);
      }

      .card-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
        gap: 20px;
        margin-top: 20px;
      }

      .card {
        background: var(--card-background);
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2), 0 1px 3px rgba(0, 0, 0, 0.1);
        padding: 20px;
        display: flex;
        flex-direction: column;
        position: relative;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border: 1px solid #333;
      }

      .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3), 0 2px 4px rgba(0, 0, 0, 0.2);
      }

      .file-icon {
        font-size: 48px;
        text-align: center;
        margin-bottom: 15px;
        color: var(--primary-color);
        opacity: 0.8;
      }

      .image-preview {
        width: 100%;
        height: 150px;
        object-fit: cover;
        margin-bottom: 15px;
        border-radius: 8px;
      }

      .file-name {
        font-weight: 600;
        margin-bottom: 10px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        color: var(--text-primary);
      }

      .file-info {
        font-size: 12px;
        color: var(--text-secondary);
        margin-bottom: 15px;
      }

      .actions {
        display: flex;
        justify-content: space-around;
        margin-top: auto;
        border-top: 1px solid #333;
        padding-top: 15px;
      }

      .action-btn {
        background: none;
        border: none;
        color: var(--text-secondary);
        cursor: pointer;
        font-size: 16px;
        transition: color 0.3s ease;
      }

      .action-btn:hover {
        color: var(--primary-color);
      }

      .tabs {
        display: flex;
        margin-bottom: 20px;
        border-bottom: 1px solid #333;
      }

      .tab {
        padding: 12px 20px;
        cursor: pointer;
        color: var(--text-secondary);
        border-bottom: 2px solid transparent;
        transition: all 0.3s ease;
      }

      .tab.active {
        border-bottom: 2px solid var(--primary-color);
        color: var(--primary-color);
      }

      .empty-state {
        text-align: center;
        padding: 50px 0;
        color: var(--text-secondary);
      }

      .empty-state i {
        font-size: 48px;
        margin-bottom: 20px;
        color: #444;
      }

      /* Dropdown Specific Styles */
      .dropdown {
        position: absolute;
        top: 15px;
        right: 15px;
      }

      .dropdown-trigger {
        background: none;
        border: none;
        color: var(--text-secondary);
        cursor: pointer;
        transition: color 0.3s ease;
        padding: 5px;
        border-radius: 50%;
      }

      .dropdown-trigger:hover {
        color: var(--primary-color);
        background-color: rgba(255, 255, 255, 0.1);
      }

      .dropdown-content {
        display: none;
        position: absolute;
        right: 0;
        top: 100%;
        background-color: var(--card-background);
        min-width: 180px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2), 0 1px 3px rgba(0, 0, 0, 0.1);
        z-index: 10;
        border-radius: 8px;
        border: 1px solid #333;
        overflow: hidden;
        margin-top: 8px;
        animation: dropdown-slide 0.2s ease;
      }

      @keyframes dropdown-slide {
        from {
          opacity: 0;
          transform: translateY(-10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .dropdown-content a {
        color: var(--text-primary);
        padding: 12px 16px;
        text-decoration: none;
        display: flex;
        align-items: center;
        gap: 10px;
        transition: all 0.3s ease;
      }

      .dropdown-content a:hover {
        background-color: rgba(255, 255, 255, 0.1);
        color: var(--primary-color);
      }

      .dropdown-content a i {
        margin-right: 10px;
        color: var(--text-secondary);
        transition: color 0.3s ease;
      }

      .dropdown-content a:hover i {
        color: var(--primary-color);
      }

      /* Dropdown Toggle JavaScript Styling */
      .dropdown.active .dropdown-content {
        display: block;
      }

      #shareTitle {
        font-family: "Cormorant", serif;
      }

      .mainlogo{
        width: 50px;
        height: 50px;
        margin-right: 10px;
        filter: invert(50%);
      }
    </style>
  </head>
  <body>
    <div class="container">
      <div class="header">
        <img class="mainlogo" src="https://i.ibb.co/b5XDtMdN/google-drive.png" alt="logo" />
        <div class="nav">
          <a href="/dashboard">Home</a>
          <a href="/logout">Logout</a>
        </div>
      </div>

      <a href="/document/upload" class="upload-btn">
        <i class="fas fa-upload"></i> Upload File
      </a>

      <div class="tabs">
        <div class="tab active" data-tab="my-files">My Files</div>
        <div class="tab" data-tab="shared-with-me">Shared with Me</div>
      </div>

      <div id="my-files" class="tab-content active">
        <div class="card-container">
          <% if (typeof myDocuments !== 'undefined' && myDocuments.length > 0) {
          %> <% myDocuments.forEach(function(doc) { %>
          <div class="card">
            <div class="dropdown">
              <button class="dropdown-trigger">
                <i class="fas fa-ellipsis-v"></i>
              </button>
              <div class="dropdown-content">
                <a href="/document/view/<%= doc._id %>">
                  <i class="fas fa-eye"></i> View
                </a>
                <a href="/document/download/<%= doc._id %>">
                  <i class="fas fa-download"></i> Download
                </a>
                <a href="#" onclick="openShareModal('<%= doc._id %>')">
                  <i class="fas fa-share-alt"></i> Share
                </a>
                <a href="#" onclick="togglePublic('<%= doc._id %>', this)">
                  <i class="fas fa-lock"></i>
                  <%= doc.isPublic ? 'Make Private' : 'Make Public' %>
                </a>
                <a href="#" onclick="deleteDocument('<%= doc._id %>')">
                  <i class="fas fa-trash"></i> Delete
                </a>
              </div>
            </div>

            <% if (doc.mimetype.startsWith('image/')) { %>
            <img
              src="/document/raw/<%= doc._id %>"
              class="image-preview"
              alt="<%= doc.originalname %>"
            />
            <% } else { %>
            <div class="file-icon">
              <% if (doc.mimetype.startsWith('video/')) { %>
              <i class="fas fa-file-video"></i>
              <% } else if (doc.mimetype.startsWith('audio/')) { %>
              <i class="fas fa-file-audio"></i>
              <% } else if (doc.mimetype === 'application/pdf') { %>
              <i class="fas fa-file-pdf"></i>
              <% } else if (doc.mimetype.includes('word')) { %>
              <i class="fas fa-file-word"></i>
              <% } else if (doc.mimetype.includes('excel') ||
              doc.mimetype.includes('spreadsheet')) { %>
              <i class="fas fa-file-excel"></i>
              <% } else { %>
              <i class="fas fa-file"></i>
              <% } %>
            </div>
            <% } %>

            <div class="file-name"><%= doc.originalname %></div>
            <div class="file-info">
              <%= new Date(doc.createdAt).toLocaleDateString() %> â€¢ <%=
              (doc.size / 1024).toFixed(1) %> KB
            </div>

            <div class="actions">
              <a
                href="/document/view/<%= doc._id %>"
                class="action-btn"
                title="View"
              >
                <i class="fas fa-eye"></i>
              </a>
              <a
                href="/document/download/<%= doc._id %>"
                class="action-btn"
                title="Download"
              >
                <i class="fas fa-download"></i>
              </a>
              <button
                class="action-btn"
                title="Share"
                onclick="openShareModal('<%= doc._id %>')"
              >
                <i class="fas fa-share-alt"></i>
              </button>
            </div>
          </div>
          <% }); %> <% } else { %>
          <div class="empty-state">
            <i class="fas fa-folder-open"></i>
            <h3>No files yet</h3>
            <p>Upload your first file to get started</p>
          </div>
          <% } %>
        </div>
      </div>

      <div id="shared-with-me" class="tab-content">
        <h1 id="shareTitle">Shared Files</h1>
        <div class="card-container">
          <% if (typeof sharedDocuments !== 'undefined' &&
          sharedDocuments.length > 0) { %> <%
          sharedDocuments.forEach(function(doc) { %>
          <div class="card">
            <% if (doc.mimetype.startsWith('image/')) { %>
            <img
              src="/document/raw/<%= doc._id %>"
              class="image-preview"
              alt="<%= doc.originalname %>"
            />
            <% } else { %>
            <div class="file-icon">
              <% if (doc.mimetype.startsWith('video/')) { %>
              <i class="fas fa-file-video"></i>
              <% } else if (doc.mimetype.startsWith('audio/')) { %>
              <i class="fas fa-file-audio"></i>
              <% } else if (doc.mimetype === 'application/pdf') { %>
              <i class="fas fa-file-pdf"></i>
              <% } else if (doc.mimetype.includes('word')) { %>
              <i class="fas fa-file-word"></i>
              <% } else if (doc.mimetype.includes('excel') ||
              doc.mimetype.includes('spreadsheet')) { %>
              <i class="fas fa-file-excel"></i>
              <% } else { %>
              <i class="fas fa-file"></i>
              <% } %>
            </div>
            <% } %>

            <div class="file-name"><%= doc.originalname %></div>
            <div class="file-info">
              Shared by: <%= doc.user.name %> â€¢ <%= new
              Date(doc.createdAt).toLocaleDateString() %> â€¢ <%= (doc.size /
              1024).toFixed(1) %> KB
            </div>

            <div class="actions">
              <a
                href="/document/view/<%= doc._id %>"
                class="action-btn"
                title="View"
              >
                <i class="fas fa-eye"></i>
              </a>
              <a
                href="/document/download/<%= doc._id %>"
                class="action-btn"
                title="Download"
              >
                <i class="fas fa-download"></i>
              </a>
            </div>
          </div>
          <% }); %> <% } else { %>
          <div class="empty-state">
            <i class="fas fa-share-alt"></i>
            <h3>No shared files</h3>
            <p>Files shared with you will appear here</p>
          </div>
          <% } %>
        </div>
      </div>
    </div>

    <!-- Share Modal -->
    <div id="shareModal" class="share-modal">
      <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Share Document</h2>
        <form id="shareForm" class="share-form">
          <input type="hidden" id="documentId" name="documentId" />
          <input
            type="email"
            id="shareEmail"
            name="email"
            placeholder="Enter email address"
            required
          />
          <button type="submit">Share</button>
        </form>
      </div>
    </div>

    <script>
      // Tab functionality
      document.querySelectorAll(".tab").forEach((tab) => {
        tab.addEventListener("click", () => {
          // Remove active class from all tabs and content
          document
            .querySelectorAll(".tab")
            .forEach((t) => t.classList.remove("active"));
          document
            .querySelectorAll(".tab-content")
            .forEach((c) => c.classList.remove("active"));

          // Add active class to clicked tab and corresponding content
          tab.classList.add("active");
          document.getElementById(tab.dataset.tab).classList.add("active");
        });
      });

      // Modal functionality
      const modal = document.getElementById("shareModal");
      const closeBtn = document.querySelector(".close");

      function openShareModal(documentId) {
        document.getElementById("documentId").value = documentId;
        modal.style.display = "block";
      }

      closeBtn.onclick = function () {
        modal.style.display = "none";
      };

      window.onclick = function (event) {
        if (event.target == modal) {
          modal.style.display = "none";
        }
      };

      // Share form submission
      document
        .getElementById("shareForm")
        .addEventListener("submit", async (e) => {
          e.preventDefault();
          const documentId = document.getElementById("documentId").value;
          const email = document.getElementById("shareEmail").value;

          try {
            const response = await fetch(`/document/share/${documentId}`, {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ email }),
            });

            const data = await response.json();

            if (data.success) {
              alert("Document shared successfully!");
              modal.style.display = "none";
            } else {
              alert(data.error || "Failed to share document");
            }
          } catch (error) {
            console.error("Error sharing document:", error);
            alert("Failed to share document");
          }
        });

      // Delete document
      async function deleteDocument(documentId) {
        if (confirm("Are you sure you want to delete this document?")) {
          try {
            const response = await fetch(`/document/delete/${documentId}`, {
              method: "DELETE",
            });

            const data = await response.json();

            if (data.success) {
              alert("Document deleted successfully!");
              location.reload();
            } else {
              alert(data.error || "Failed to delete document");
            }
          } catch (error) {
            console.error("Error deleting document:", error);
            alert("Failed to delete document");
          }
        }
      }

      // Toggle public access
      async function togglePublic(documentId, element) {
        try {
          const response = await fetch(
            `/document/toggle-public/${documentId}`,
            {
              method: "POST",
            }
          );

          const data = await response.json();

          if (data.success) {
            element.textContent = data.isPublic
              ? "Make Private"
              : "Make Public";
            alert(
              data.isPublic
                ? "Document is now public"
                : "Document is now private"
            );
          } else {
            alert(data.error || "Failed to update document");
          }
        } catch (error) {
          console.error("Error updating document:", error);
          alert("Failed to update document");
        }
      }

      document.addEventListener("DOMContentLoaded", () => {
        // Dropdown Toggle Functionality
        document.querySelectorAll(".dropdown-trigger").forEach((trigger) => {
          trigger.addEventListener("click", (event) => {
            event.stopPropagation(); // Prevent event from bubbling

            // Close all other open dropdowns
            document.querySelectorAll(".dropdown").forEach((dd) => {
              if (dd !== trigger.closest(".dropdown")) {
                dd.classList.remove("active");
              }
            });

            // Toggle current dropdown
            const dropdown = trigger.closest(".dropdown");
            dropdown.classList.toggle("active");
          });
        });

        // Close dropdowns when clicking outside
        document.addEventListener("click", (event) => {
          const dropdowns = document.querySelectorAll(".dropdown");
          dropdowns.forEach((dropdown) => {
            if (!dropdown.contains(event.target)) {
              dropdown.classList.remove("active");
            }
          });
        });

        // Prevent dropdown from closing when clicking inside
        document.querySelectorAll(".dropdown-content").forEach((content) => {
          content.addEventListener("click", (event) => {
            event.stopPropagation();
          });
        });
      });

      // Share Document Function
      function openShareModal(documentId) {
        const modal = document.getElementById("shareModal");
        document.getElementById("documentId").value = documentId;
        modal.style.display = "block";

        // Close any open dropdowns
        document.querySelectorAll(".dropdown").forEach((dropdown) => {
          dropdown.classList.remove("active");
        });
      }

      // Delete Document Function
      async function deleteDocument(documentId) {
        // Close dropdown
        const dropdown = event.target.closest(".dropdown");
        if (dropdown) dropdown.classList.remove("active");

        if (confirm("Are you sure you want to delete this document?")) {
          try {
            const response = await fetch(`/document/delete/${documentId}`, {
              method: "DELETE",
            });

            const data = await response.json();

            if (data.success) {
              alert("Document deleted successfully!");
              location.reload();
            } else {
              alert(data.error || "Failed to delete document");
            }
          } catch (error) {
            console.error("Error deleting document:", error);
            alert("Failed to delete document");
          }
        }
      }

      // Toggle Public Access Function
      async function togglePublic(documentId, element) {
        try {
          const response = await fetch(
            `/document/toggle-public/${documentId}`,
            {
              method: "POST",
            }
          );

          const data = await response.json();

          if (data.success) {
            // Update the text of the clicked element
            element.textContent = data.isPublic
              ? "Make Private"
              : "Make Public";
            alert(
              data.isPublic
                ? "Document is now public"
                : "Document is now private"
            );

            // Close dropdown
            const dropdown = element.closest(".dropdown");
            if (dropdown) dropdown.classList.remove("active");
          } else {
            alert(data.error || "Failed to update document");
          }
        } catch (error) {
          console.error("Error updating document:", error);
          alert("Failed to update document");
        }
      }
    </script>
  </body>
</html>
